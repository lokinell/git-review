#!/bin/bash

this=$(basename "$0")

usage(){

cat <<EOF
$this [<commit>]
$this --cached [<commit>]
$this <commit> <commit>
EOF
}

THIS_ARGS="$(getopt -o 'h' --long help,cached -- "$@")"
[[ $? != "0" ]] && { echo "argument error."; return 1; };
eval set -- "$THIS_ARGS"

DIFF_ARGS=()
COMMITS=()

while :; do
    case "${1}" in
        -h|--help)
            usage
            exit 0
            ;;
        --cached)
            DIFF_ARGS+=("--cached")
            shift;;
        --)
            shift
            break;;
        *) echo "unknow options"; return 1 ;;
    esac
done

COMMITS+=("$@")

TOPLEVEL="$(cd "$(git rev-parse --show-toplevel)" && pwd)"
cd "$TOPLEVEL"

for c in "${COMMITS[@]}"; do
    if ! git rev-parse "$c" &>/dev/null; then
        echo "commit: $c 不存在." >&2
        exit 1
    fi
done

git diff --name-only "${DIFF_ARGS[@]}" "${COMMITS[@]}" | \
    while read -r filename; do
        if [[ $filename =~ \.py$ ]] || [[ "$(sed -ne '1{ /^#.*python/p }' "$filename")" ]] ; then
            python "$(dirname "$0")/check-list-diff.py" -p1 \
                --diff=<(git diff "${DIFF_ARGS[@]}" -U0 "${COMMITS[@]}" -- "$filename") \
                --listfile=<(pylint --msg-template='{path}:{line}:{column}: {msg}' "$filename") \
                --format='^{filename}:{lineno}:'
        fi
    done

